<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EDPoS_API_Core</name>
    </assembly>
    <members>
        <member name="M:EDPoS_API_Core.Bll.BAppInfo.InsertOne(EDPoS_API_Core.Models.MAppInfo)">
            <summary>
            Add One App
            </summary>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BCommon.GetBlockDetail(System.String,System.String)">
            <summary>
            Get EDPoS Blocks Detail what is useful
            </summary>
            <param name="reward_address"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BDpos.GetPoolList">
            <summary>
            Get Pool List
            </summary>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BDpos.GetDposRewardDetails(System.String,System.Int32,System.String,System.String)">
            <summary>
            Voting and reward details at an address on a given day
            </summary>
            <param name="dateTime"></param>
            <param name="height"></param>
            <param name="dpos_addr"></param>
            <param name="client_addr"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BDpos.GetMaxHeight(System.String,System.String)">
            <summary>
            Get the max height of the table DposRewardDetails
            </summary>
            <param name="date"></param>
            <param name="dposAddr"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BDpos.GetVotingTokens(System.Int64)">
            <summary>
            Get the situation of voting
            </summary>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BDpos.GetPayment_money(System.String)">
            <summary>
            Get the total rewards of the day
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BPowPoolDailyReward.GetOne(System.Int64)">
            <summary>
            Get One
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BPowPoolDailyReward.GetBySomething(System.String,System.String,System.String)">
            <summary>
            Get info by addrFrom, addrTo or settlement date
            </summary>
            <param name="addrFrom"></param>
            <param name="addrTo"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BPowPoolDailyReward.InsertOne(EDPoS_API_Core.Models.MPowPoolDailyReward)">
            <summary>
            insert one
            </summary>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BPowPoolDailyReward.InsertLst(System.Collections.Generic.List{EDPoS_API_Core.Models.MPowPoolDailyReward})">
            <summary>
            Multi insert
            </summary>
            <param name="lst"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BReward.GetTotalReward(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dpos_addr"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BReward.GetDposDailyReward(System.String,System.DateTime)">
            <summary>
            Get Dpos Daily Reward
            </summary>
            <param name="dpos_addr"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Bll.BVoter.GetVoting(System.String,System.String)">
            <summary>
            Get the Voting of voters by dposaddr,if has the voterAddr parameter,return the voter's information
            </summary>
            <param name="dposAddr">super node address</param>
            <param name="voterAddr">voter address</param>
            <returns></returns>
        </member>
        <member name="T:EDPoS_API_Core.Common.DataValid">
            <summary>
            Valid class
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Common.DataValid.Valid(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Valid.Ignore case
            </summary>
            <param name="requestSign">Result of Client Signature,appID + ":" + timeSpan + ":" + signPlain</param>
            <param name="appID">appid</param>
            <param name="signPlain">The data that awaiting signature</param>
            <param name="timeSpan">TimeSpan</param>
            <param name="secretKey">Key</param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Common.Encrypt.EncryptByMD5(System.String)">
            <summary>
             Encrypt the specified string to a hexadecimal string of 32 characters in length using the MD5.
            </summary>
            <param name="input">The specified string</param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Common.Encrypt.HmacSHA256(System.String,System.String)">
            <summary>
            HmacSHA256
            </summary>
            <param name="secretKey"></param>
            <param name="plain"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Common.SqlAttack.IsDangerous(System.String@)">
            <summary>
            If dangerous,return true,else return false
            </summary>
            <param name="strParam"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.AppIdController.Get">
            <summary>
            Get a appID
            </summary>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.AppInfoController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.AppInfoController.Post(EDPoS_API_Core.Models.MAppInfoPwd)">
            <summary>
            Add a app info
            </summary>
            <param name="mo">MAppInfoPwd</param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DailyRewardTotalController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DailyRewardTotalController.Get(System.String,System.String,System.Boolean)">
            <summary>
            Get total rewards by EDPoS address or date
            </summary>
            <param name="dpos_addr"></param>
            <param name="date">eg. 2020-05-12</param>
            <param name="isAll"></param>
            <returns></returns>
        </member>
        <member name="T:EDPoS_API_Core.Controllers.DposController">
            <summary>
            About EDPoS
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DposController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DposController.Get">
            <summary>
             Get the list of users who participate in the dpos supernode campaign
            </summary>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DposController.Get(System.DateTime)">
            <summary>
            Get the reward list by datetime
            </summary>
            <param name="date">dataTime,formate:2020-01-01</param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DposController.Get(System.String,System.DateTime)">
            <summary>
            Get avg_profit and profit by super node address and date
            </summary>
            <param name="dposAddr"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:EDPoS_API_Core.Controllers.DposDetailsController">
            <summary>
            EDPoS details
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.DposDetailsController.Get(System.String,System.Int32,System.String,System.String)">
            <summary>
            Get Reward details by date, height, node address or voter address
            </summary>
            <param name="dateTime"></param>
            <param name="height"></param>
            <param name="dpos_addr"></param>
            <param name="client_addr"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.PowPoolDailyRewardController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.PowPoolDailyRewardController.Get(System.Int64)">
            <summary>
            Get one by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.PowPoolDailyRewardController.Get(System.String,System.String,System.String,System.String)">
            <summary>
            Get info by addrFrom, addrTo or settlement date
            </summary>
            <param name="appID">appID</param>
            <param name="addrFrom">wallet address : from</param>
            <param name="addrTo">wallet address : to</param>
            <param name="date">2020-06-04</param>
            <returns></returns>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.PowPoolDailyRewardController.Post(EDPoS_API_Core.Models.MPowPoolDailyRewardWithValid)">
            <summary>
            Insert Reward Info into PowPoolDailyReward
            </summary>
            <param name="value"></param>
            <returns>Return the count of inserted info</returns>
        </member>
        <member name="T:EDPoS_API_Core.Controllers.RewardController">
            <summary>
            About rewards
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.RewardController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.RewardController.Get(System.String,System.String,System.DateTime)">
            <summary>
             Get earnings list by dpos address and date
            </summary>
            <param name="appID">appID</param>
            <param name="dpos_addr">super node address</param>
            <param name="date">formate:2020-01-01</param>
            <returns>list</returns>
        </member>
        <member name="T:EDPoS_API_Core.Controllers.ValidController">
            <summary>
            Valid data for request api
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.ValidController.#ctor(Microsoft.Extensions.Options.IOptions{EDPoS_API_Core.Models.SiteConfig})">
            <summary>
            constructed function
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.ValidController.Post(EDPoS_API_Core.Models.MValid)">
            <summary>
            
            </summary>
            <param name="mop"></param>
        </member>
        <member name="T:EDPoS_API_Core.Controllers.VotersController">
            <summary>
            About Voters information
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Controllers.VotersController.Get(System.String,System.String)">
            <summary>
            Get the Voting of voters by dposaddr,if has the voterAddr parameter,return the voter's information
            </summary>
            <param name="dposAddr"></param>
            <param name="voterAddr"></param>
            <returns></returns>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposAddrDailyAll.dpos_addr">
            <summary>
            EDPOS address, It is used to reward voters
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposAddrDailyAll.payment_money">
            <summary>
            The amount of pay out
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.DposAddrDaily">
            <summary>
            Dpos address daily reward
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposAddrDaily.payment_date">
            <summary>
            The datetime of reward voters
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.DposDailyReward">
            <summary>
            Daily reward
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposDailyReward.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposDailyReward.client_addr">
            <summary>
            voter address
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposDailyReward.txid">
            <summary>
            The return id of dpos node had payed
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.DposRewardDetails">
            <summary>
            Reward details
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.dpos_addr">
            <summary>
            EDPOS address, It is used to reward voters
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.client_addr">
            <summary>
            Voter address
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.vote_amount">
            <summary>
            Vote tokens
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.reward_money">
            <summary>
            Reward tokens
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.reward_date">
            <summary>
            The datetime of compute
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.block_height">
            <summary>
            Block height
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.DposRewardDetails.reward_state">
            <summary>
            Status of payments
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.IResult">
            <summary>
            The Interface of result
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.IResult.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.IResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.IResult.Success">
            <summary>
            Is Success
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.IResult`1">
            <summary>
            Generic classes
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.IResult`1.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.ResultCode">
            <summary>
            Code
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.Ok">
             <summary>
             OK
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.Fail">
             <summary>
             Fail
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.LoginFail">
             <summary>
             Login fail
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.NoRecord">
             <summary>
             No Record
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.NoSuchUser">
             <summary>
             No users
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.Unauthorized">
             <summary>
             Not logged
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.Forbidden">
            <summary>
            Unauthorized
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.InvalidToken">
            <summary>
            Invalid token
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.InvalidData">
            <summary>
            Parameter validation failed
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.InvalidUser">
            <summary>
            Invalid user
            </summary>
        </member>
        <member name="F:EDPoS_API_Core.Models.ResultCode.Zero">
            <summary>
            The denominator can not be zero
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.EumHelper">
            <summary>
            show message
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.EumHelper.DisplayName(System.Enum)">
            <summary>
            Display message
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="P:EDPoS_API_Core.Models.MAppInfo.appID">
            <summary>
            GUID
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MAppInfo.appName">
            <summary>
            App name
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MAppInfo.secretKey">
            <summary>
            Your secret key
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MAppInfoPwd.pwd">
            <summary>
            The password owned by administrator，sha256 encryption before submission
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MPowPoolDailyRewardWithValid.rewardLst">
            <summary>
            
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MPowPoolDailyRewardWithHash.hash">
            <summary>
            
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MPowPoolDailyRewardWithHash.rewardLst">
            <summary>
            
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.MValid">
            <summary>
            Valid Info
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MValid.requestSign">
            <summary>
            Result of Client Signature,appID + ":" + timeSpan + ":" + signPlain
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MValid.appID">
            <summary>
            appID
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MValid.signPlain">
            <summary>
            The data that awaiting signature
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.MValid.timeSpan">
            <summary>
            TimeSpan
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.Pool">
            <summary>
            About pool
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Pool.id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Pool.address">
            <summary>
            pool address
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Pool.name">
            <summary>
            pool name
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Pool.key">
            <summary>
            pool key
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.JsonPool">
            <summary>
            
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.JsonPool.name">
            <summary>
            
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.JsonPool.md5">
            <summary>
            
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Result.Success">
            <summary>
            Is success
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Result.Code">
            <summary>
            Result code
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Result.Message">
            <summary>
            show message
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.#ctor">
            <summary>
            Return result,default ok
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.#ctor(EDPoS_API_Core.Models.ResultCode,System.String)">
            <summary>
            Return the result
            </summary>
            <param name="code">state code</param>
            <param name="message">message</param>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromCode(EDPoS_API_Core.Models.ResultCode,System.String)">
            <summary>
            Return the specific state code
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromError(System.String,EDPoS_API_Core.Models.ResultCode)">
            <summary>
            Return error message
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.Ok(System.String)">
            <summary>
            Return successful
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromCode``1(EDPoS_API_Core.Models.ResultCode,System.String)">
            <summary>
            Return the specific state code
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromCode``1(EDPoS_API_Core.Models.ResultCode,``0,System.String)">
            <summary>
            Return the specific state code, message and data
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromError``1(System.String,EDPoS_API_Core.Models.ResultCode)">
            <summary>
            Return error message
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromData``1(``0)">
            <summary>
            Return data
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.FromData``1(``0,System.String)">
            <summary>
            Return data and message
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result.Ok``1(``0)">
            <summary>
            Return successfull
            </summary>
        </member>
        <member name="T:EDPoS_API_Core.Models.Result`1">
            <summary>
            Return result
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result`1.#ctor(`0)">
            <summary>
            Return result
            </summary>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result`1.#ctor(EDPoS_API_Core.Models.ResultCode,System.String)">
            <summary>
            Return result and message
            </summary>
            <param name="code">state code</param>
            <param name="message">Note</param>
        </member>
        <member name="M:EDPoS_API_Core.Models.Result`1.#ctor(EDPoS_API_Core.Models.ResultCode,System.String,`0)">
            <summary>
            Return result
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.Result`1.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.TransactionInfo.dpos_in">
            <summary>
            The dpos address of vote to
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.TransactionInfo.client_in">
            <summary>
            The address of voter
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.TransactionInfo.dpos_out">
            <summary>
            The dpos address of redeem to
            </summary>
        </member>
        <member name="P:EDPoS_API_Core.Models.TransactionInfo.client_out">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
